{"version":3,"sources":["api.ts","types/SortType.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","SortType","TodoList","todos","selectedTodo","onSelectUser","className","map","todo","id","completed","title","type","onClick","userId","classNames","TodoFilter","query","onChangeQuery","onChangeSortType","onChange","event","target","value","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","TodoModal","selectedUserId","useState","user","setUser","loadUser","a","userFromServer","useEffect","href","email","name","App","setTodos","visibleTodos","setVisibleTodos","isLoading","setIsLoading","setQuery","sortType","setSortType","setSelectedTodo","setSelectedUserId","isUserSelected","setIsUserSelected","loadTodos","todosFromServer","handleFilter","toLowerCase","includes","filter","selectUser","todoId","newSelectedTodo","find","input","newSortType","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32f4dcd0.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum SortType {\n  ALL = 'All',\n  ACTIVE = 'Active',\n  COMPLETED = 'Completed',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  onSelectUser: (userId: number, todoId: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelectUser,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  onSelectUser(todo.userId, todo.id);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    {\n                      'fa-eye-slash': selectedTodo?.id === todo.id,\n                      'fa-eye': selectedTodo?.id !== todo.id,\n                    },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { SortType } from '../../types/SortType';\n\ntype Props = {\n  query: string,\n  onChangeQuery: (input: string) => void,\n  onChangeSortType: (newSortType: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onChangeQuery,\n  onChangeSortType,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => {\n              onChangeSortType(event.target.value);\n            }}\n          >\n            <option value={SortType.ALL}>All</option>\n            <option value={SortType.ACTIVE}>Active</option>\n            <option value={SortType.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            onChangeQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                onChangeQuery('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo?: Todo | null,\n  selectedUserId: number,\n  onSelectUser: (userId: number, todoId: number) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  selectedUserId,\n  onSelectUser,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const loadUser = async () => {\n    const userFromServer = await getUser(selectedUserId);\n\n    setUser(userFromServer);\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onSelectUser(0, 0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { SortType } from './types/SortType';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [query, setQuery] = useState('');\n  const [sortType, setSortType] = useState<string>(SortType.ALL);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [isUserSelected, setIsUserSelected] = useState(false);\n\n  const loadTodos = async () => {\n    const todosFromServer: Todo[] = await getTodos();\n\n    setIsLoading(true);\n    setTodos(todosFromServer);\n    setVisibleTodos(todosFromServer);\n  };\n\n  useEffect(() => {\n    loadTodos();\n    setIsLoading(false);\n  }, []);\n\n  const changeSortType = (newSortType: string) => {\n    setSortType(newSortType);\n  };\n\n  const changeQuery = (input: string) => {\n    setQuery(input);\n  };\n\n  const handleFilter = (title: string) => {\n    return title.toLowerCase().includes(query.toLowerCase());\n  };\n\n  useEffect(() => {\n    switch (sortType) {\n      case SortType.ALL:\n        setVisibleTodos(todos.filter(todo => (\n          handleFilter(todo.title)\n        )));\n        break;\n\n      case SortType.ACTIVE:\n        setVisibleTodos(todos.filter(todo => (\n          !todo.completed && handleFilter(todo.title)\n        )));\n        break;\n\n      case SortType.COMPLETED:\n        setVisibleTodos(todos.filter(todo => (\n          todo.completed && handleFilter(todo.title)\n        )));\n        break;\n\n      default:\n        break;\n    }\n  }, [sortType, query]);\n\n  const selectUser = (userId: number, todoId: number) => {\n    const newSelectedTodo = todos.find(todo => todo.id === todoId);\n\n    if (newSelectedTodo) {\n      setSelectedTodo(newSelectedTodo);\n    }\n\n    setSelectedUserId(userId);\n    setIsUserSelected(!isUserSelected);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            {!isLoading ? (\n              <Loader />\n            ) : (\n              <>\n                <h1 className=\"title\">\n                  {`${sortType} todos:`}\n                </h1>\n\n                <div className=\"block\">\n                  <TodoFilter\n                    query={query}\n                    onChangeQuery={changeQuery}\n                    onChangeSortType={changeSortType}\n                  />\n                </div>\n\n                <div className=\"block\">\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    onSelectUser={selectUser}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {selectedUserId && (\n        <TodoModal\n          todo={selectedTodo}\n          selectedUserId={selectedUserId}\n          onSelectUser={selectUser}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}